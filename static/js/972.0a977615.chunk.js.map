{"version":3,"file":"static/js/972.0a977615.chunk.js","mappings":"4LACA,EAAsB,yB,SCETA,EAAc,WACvB,OAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,MACAC,EAAAA,EAAAA,YAAU,WACNC,OAAOC,iBAAiB,UAAU,WAC1BD,OAAOE,QAAU,IACjBJ,GAAe,GAEfA,GAAe,EAEtB,GACJ,GAAE,IAQH,OACA,8BACKD,IACO,mBAAQM,UAAWC,EAEnBC,QAXK,WACbL,OAAOM,SAAS,CACZC,IAAK,EACLC,SAAS,UAEhB,EAIW,gBAMf,C,iKC7BD,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA6F,4BAA7F,EAAgI,0BAAhI,EAAiK,0BAAjK,EAA8Q,oCAA9Q,EAA8T,+BAA9T,EAA2W,iCCA3W,EAAyB,2B,SCAZC,EAAa,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC3B,OAEM,mBAAQL,QAASK,EACnBP,UAAWC,EADT,UAIF,iCAEJ,E,2BCkKF,EAjKoB,WAClB,OAA4BR,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeC,EAAf,KACA,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwBnB,EAAAA,EAAAA,UAAS,GAAjC,eAAOoB,EAAP,KAAaC,EAAb,KACA,GAA0BrB,EAAAA,EAAAA,UAAS,MAAnC,eAAOsB,EAAP,KAAcC,EAAd,KACA,GAA8BvB,EAAAA,EAAAA,WAAS,GAAvC,eAAOwB,EAAP,KAAgBC,EAAhB,KACA,GAAwCzB,EAAAA,EAAAA,UAAS,GAAjD,eAAO0B,EAAP,KAAqBC,EAArB,KACA,GAA+B3B,EAAAA,EAAAA,WAAS,GAAxC,eAGM4B,GAHN,WAGiBC,EAAAA,EAAAA,OACXC,EAAQZ,EAAYa,IAAI,cAE9B5B,EAAAA,EAAAA,YAAU,WAER,GAAK2B,EAAL,CAIA,IAAME,EAAiB,mCAAG,4GAEtBP,GAAW,GAFW,UAGCQ,EAAAA,EAAAA,GAAcH,EAAOV,GAHtB,OAGhBc,EAHgB,OAIdC,EAAwCD,EAAxCC,QAASC,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,cAC9BrB,EAAUmB,GAEVR,EAAgBU,GAEVC,EAAaC,KAAKC,KAAKJ,EAAc,IAKvChB,IAASkB,GACXG,EAAAA,OAAAA,KAAY,6CAEVrB,EAAO,GACTqB,EAAAA,OAAAA,QAAA,2BAAmCJ,EAAnC,aAlBoB,kDAqBtBd,EAAS,kCArBa,yBAuBtBE,GAAW,GAvBW,6EAAH,qDA4BrBO,GA7BD,MAFCS,EAAAA,OAAAA,KAAY,8BAkCf,GAAE,CAACX,EAAOV,IAsBX,IAYMsB,EAA+B,IAAlB3B,EAAO4B,OAEpBC,EAAa7B,EAAO4B,SAAWjB,EAE9BmB,EAAcH,IAAelB,IAAYoB,EAEhD,OACE,iCACE,kBAAMrC,UAAWC,EAAasC,SApBT,SAAAC,GACvBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,OACf/B,EAAgB,CAAEgC,UAAWF,EAAKG,SAAStB,MAAMuB,MAAMC,SAEvDL,EAAKM,OACN,EAaG,WACE,kBACEhD,UAAWC,EACXgD,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,8BAEd,mBAAQrD,UAAWC,EAAeiD,KAAK,cAExCnC,GAASuC,MAAMvC,EAAMwC,SACrBtC,IAAW,SAACuC,EAAA,EAAD,IAEXrB,GACC,gCACG,KACD,eAAInC,UAAWC,EAAf,SACGO,EAAOiD,KACN,YAOO,IANLC,EAMI,EANJA,GACAC,EAKI,EALJA,MACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aACAC,EACI,EADJA,eAEA,OACE,gBAAa/D,UAAWC,EAAxB,WACE,cAAGD,UAAWC,EAAd,SAAmC+B,KAAKC,KAAK6B,MAC7C,SAAC,KAAD,CAAME,GAAE,iBAAYN,GAAMO,MAAO,CAAEC,KAAM7C,GAAzC,SACmB,OAAhBuC,GACC,gBACEO,IAAG,yCAAoCP,GACvCQ,IAAKL,KAGL,gBAAKI,IAAKE,EAAOD,IAAKL,EAAgBO,MAAO,CAACC,MAAO,OAAUC,OAAO,aAG7E,iBAAKxE,UAAWC,EAAhB,WACC,eAAID,UAAWC,EAAf,SAAkC0D,KAClC,cAAG3D,UAAWC,EAAd,SAAiC4D,SAd1BH,EAkBZ,OAGL,SAAClE,EAAA,EAAD,KAEA,SAAC,KAAD,QAGF,gBACE8E,MAAO,CACLG,QAAS,QACTC,OAAQ,YACRH,MAAO,OACPC,OAAQ,QAEVL,IAAKQ,EACLP,IAAI,uBAGP9B,IAAe,SAAChC,EAAD,CAAYC,WA7Eb,WACjBO,GAAQ,SAAA8D,GAAU,OAAIA,EAAa,CAAjB,GACnB,MA8EF,C,8LCzKKC,EAAM,mCAIL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCjE,GAAhC,wFACoBkE,EAAAA,EAAAA,GAAM,sBAAsB,CAC/CC,OACA,CACGC,QAASJ,EACRhD,YAAa,GACbhB,KAAAA,KANL,cACGc,EADH,yBASIA,EAASuD,MATb,kEAaA,SAAexD,EAAtB,+CAAO,OAAP,oBAAO,WAA6BH,GAA7B,4FAAmCV,EAAnC,+BAAwC,EAAxC,UACoBkE,EAAAA,EAAAA,GAAM,eAAe,CACxCC,OACA,CACGC,QAASJ,EACRhD,YAAa,GACbhB,KAAKA,EACJU,MAAM,GAAD,OAAIA,MAPf,cACGI,EADH,yBAUIA,EAASuD,MAVb,mEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wFACoBL,EAAAA,EAAAA,GAAM,SAAD,OAAUK,GAAY,CAC9CJ,OACA,CACEC,QAASJ,KAJZ,cACGlD,EADH,yBAOIA,EAASuD,MAPb,kEAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAmCD,GAAnC,wFACoBL,EAAAA,EAAAA,GAAM,SAAD,OAAUK,EAAV,YAA8B,CACtDJ,OACA,CACIC,QAASJ,KAJd,cACGlD,EADH,yBAQIA,EAASuD,MARb,kEAWA,SAAeI,EAAtB,mDAAO,OAAP,oBAAO,WAAkCF,EAASvE,EAAKe,GAAhD,wFACoBmD,EAAAA,EAAAA,GAAM,SAAD,OAAUK,EAAV,YAA8B,CACtDJ,OACA,CACIC,QAASJ,EACTjD,QAAS,GACTf,KAAK,KANV,cACGc,EADH,yBASIA,EAASuD,KAAKtD,SATlB,kEAjDPmD,EAAAA,EAAAA,SAAAA,QAAwB,+B","sources":["webpack://goit-react-hw-05-movies/./src/components/ScrollUp/ScrollUpBtn.module.css?dda6","components/ScrollUp/ScrollUpBtn.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieSearch/MovieSearch.module.css?d7a7","webpack://goit-react-hw-05-movies/./src/components/ButtonMore/ButtonMore.module.css?ad63","components/ButtonMore/ButtonMore.jsx","pages/MovieSearch/MovieSearch.jsx","services/fetchApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ScrollUpBtn_btn__gQZOR\"};","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport styles from \"components/ScrollUp/ScrollUpBtn.module.css\"\nexport const ScrollUpBtn = () => {\n    const [scrollUpBtn, setscrollUpBtn] = useState(false);\n    useEffect(() => {\n        window.addEventListener('scroll', () => {\n            if (window.scrollY > 100) {\n                setscrollUpBtn(true)\n            } else {\n                setscrollUpBtn(false)\n            }\n        })\n    }, [])\n    \n    const scrollUp = () => {\n        window.scrollTo({\n            top: 0,\n            behavior:\"smooth\"\n        })\n    }\n    return (\n    <>\n        {scrollUpBtn && (\n                <button className={styles.btn}\n                   \n                onClick={scrollUp}>^</button>     \n        )}\n        </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MovieSearch_form__D9lls\",\"input\":\"MovieSearch_input__CJqU8\",\"button\":\"MovieSearch_button__UXtWr\",\"list\":\"MovieSearch_list__STSMH\",\"item\":\"MovieSearch_item__vAVZS\",\"irem\":\"MovieSearch_irem__lfR2n\",\"info\":\"MovieSearch_info__zBgQX\",\"titleConteiner\":\"MovieSearch_titleConteiner__IwPdU\",\"titleText\":\"MovieSearch_titleText__MO-p-\",\"voitAverege\":\"MovieSearch_voitAverege__b94tW\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ButtonMore_button__YPyE-\"};","import styles from 'components/ButtonMore/ButtonMore.module.css'\nexport const ButtonMore = ({ onLoadMore }) => {\n  return (\n//  Math.ceil(images.totalHits / images.perPage) <= pageNumber\n        <button onClick={onLoadMore}\n      className={styles.button}\n      \n    >\n      <p>NEXT</p>\n    </button> \n)}","import { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { fetchBySearch } from 'services/fetchApi';\nimport { Link, Outlet, useSearchParams, useLocation } from 'react-router-dom';\nimport { Loader } from '../../components/Loading/Loader';\nimport styles from '../MovieSearch/MovieSearch.module.css';\nimport { ButtonMore } from 'components/ButtonMore/ButtonMore';\nimport depositphotos from '../MovieSearch/depositphotos.jpg';\nimport noIMG from 'images/noIMG.jpg';\nimport { ScrollUpBtn } from 'components/ScrollUp/ScrollUpBtn';\n\nconst MovieSearch = () => {\n  const [movies, setMovies] = useState([]);\n  const [serchParams, setSearchParams] = useSearchParams();\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [totalResults, setTotalResults] = useState(0);\n  const [fetching, setFetching]= useState(true)\n  // const [totalPages,settotalPages]=useState(20);\n\n  const location = useLocation();\n  const query = serchParams.get('moviename');\n\n  useEffect(() => {\n\n    if (!query) {\n      Notify.info('No movies found. Try again!');\n      return;\n    }\n    const fetchMoviesSearch = async () => {\n      try {\n        setLoading(true);\n        const response = await fetchBySearch(query, page);\n        const { results, total_pages, total_results } = response;\n        setMovies(results)\n        //setMovies([...movies, ...results]);\n        setTotalResults(total_results);\n         //setPage(prevState => prevState + 1)\n        const totalPages = Math.ceil(total_pages / 20);\n        // if (results.length === 0) {\n        //   Notify.info('No images found. Please submit another query!');\n        //   return;\n        // }\n        if (page === totalPages) {\n          Notify.info(\"You've reached the end of search results.\");\n        }\n        if (page > 1) {\n          Notify.success(`Hooray! We found ${total_results} images.`);\n        }\n      } catch (error) {\n        setError('Ooops. Something went wrong...');\n      } finally {\n        setLoading(false);\n        //setFetching(false)\n      }\n    };\n   \n      fetchMoviesSearch();\n    \n    \n  }, [query, page]);\n\n  // useEffect(() => {\n  //   document.addEventListener('scroll', scrollHandler)\n\n  //   return function () {\n  //     document.removeEventListener('scroll', scrollHandler)\n  //   }\n  // }, [])\n  \n  // const scrollHandler = (e) => {\n  //   if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100\n  //   && movies.length < totalResults) {\n  //     setLoading(true)  \n  //     console.log('scroll')\n  //   }\n    \n  //     console.log('scrollHeight', e.target.documentElement.scrollHeight)\n  //   console.log('scrollTop',e.target.documentElement.scrollTop);\n  //    console.log('inner', window.innerHeight)\n  // }\n  \n  const hendleFormSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    setSearchParams({ moviename: form.elements.query.value.trim() });\n\n    form.reset();\n  };\n  const onLoadMore = () => {\n    setPage(prevNumber => prevNumber + 1);\n  };\n\n  const loadMovies = movies.length !== 0;\n  \n  const isLastPage = movies.length === totalResults;\n  \n   const loadMoreBtn = loadMovies && !loading && !isLastPage;\n  \n  return (\n    <>\n      <form className={styles.form} onSubmit={hendleFormSubmit}>\n        <input\n          className={styles.input}\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Look for your movie here\"\n        />\n        <button className={styles.button} type=\"submit\"></button>\n      </form>\n      {error && alert(error.message)}\n      {loading && <Loader />}\n\n      {loadMovies ? (\n        <>\n          {' '}\n          <ul className={styles.list}>\n            {movies.map(\n              ({\n                id,\n                title,\n                poster_path,\n                release_date,\n                vote_average,\n                original_title,\n              }) => {\n                return (\n                  <li key={id} className={styles.item}>\n                    <p className={styles.voitAverege}>{Math.ceil(vote_average)}</p>\n                    <Link to={`/movie/${id}`} state={{ from: location }}>\n                      {poster_path !== null ? (\n                        <img\n                          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                          alt={original_title}\n                        />\n                      ) : (\n                          <img src={noIMG} alt={original_title} style={{width: '100%'  , height:'auto' }}/>\n                      )}\n                    </Link>\n                   <div className={styles.titleConteiner}>\n                    <h1 className={styles.titleText}>{title}</h1>\n                    <p className={styles.titleText}>{release_date}</p>\n                  </div>\n                  </li>\n                );\n              }\n            )}\n          </ul>\n          <ScrollUpBtn />\n          {/* {loadMoreBtn &&<ButtonMore onLoadMore={onLoadMore}/>} */}\n          <Outlet />\n        </>\n      ) : (\n        <img\n          style={{\n            display: 'block',\n            margin: '10px auto',\n            width: 'auto',\n            height: 'auto',\n          }}\n          src={depositphotos}\n          alt=\"Let`s watch movies\"\n        />\n      )}\n      {loadMoreBtn && <ButtonMore onLoadMore={onLoadMore} />} \n    </>\n  );\n};\nexport default MovieSearch;\n","import axios from \"axios\";\n\nconst KEY = \"a1426f875d9b25aa0fd82fb82639d8ae\"\n\naxios.defaults.baseURL= 'https://api.themoviedb.org/3/'\n//?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport async function fetchByTrending (page) {\n    const response = await axios('trending/movie/week',{\n        params:\n        {\n           api_key: KEY,\n            total_pages: 20,\n            page,\n        }    \n    })\n    return response.data;\n}\n \n\nexport async function fetchBySearch(query,page=1) {\n    const response = await axios('search/movie',{\n        params:\n        {\n           api_key: KEY,\n            total_pages: 20,\n            page:page,\n             query:`${query}`\n        }    \n    })\n    return response.data;\n}\n\nexport async function fetchMoviesById(movie_id) {\n    const response = await axios(`movie/${movie_id}`, {\n        params:\n        {\n          api_key: KEY,\n        }\n    })\n    return response.data;\n}\n\nexport async function fetchMoviesByActors(movie_id) {\n    const response = await axios(`movie/${movie_id}/credits`, {\n        params:\n        {\n            api_key: KEY,   \n           // cast:[]\n        }\n    })\n    return response.data;\n}\n\nexport async function fetchMoviesReviews(movie_id,page,results) {\n    const response = await axios(`movie/${movie_id}/reviews`, {\n        params:\n        {\n            api_key: KEY,   \n            results: [],\n            page:1,\n        }\n    })\n    return response.data.results;\n}\n"],"names":["ScrollUpBtn","useState","scrollUpBtn","setscrollUpBtn","useEffect","window","addEventListener","scrollY","className","styles","onClick","scrollTo","top","behavior","ButtonMore","onLoadMore","movies","setMovies","useSearchParams","serchParams","setSearchParams","page","setPage","error","setError","loading","setLoading","totalResults","setTotalResults","location","useLocation","query","get","fetchMoviesSearch","fetchBySearch","response","results","total_pages","total_results","totalPages","Math","ceil","Notify","loadMovies","length","isLastPage","loadMoreBtn","onSubmit","e","preventDefault","form","target","moviename","elements","value","trim","reset","name","type","autoComplete","autoFocus","placeholder","alert","message","Loader","map","id","title","poster_path","release_date","vote_average","original_title","to","state","from","src","alt","noIMG","style","width","height","display","margin","depositphotos","prevNumber","KEY","fetchByTrending","axios","params","api_key","data","fetchMoviesById","movie_id","fetchMoviesByActors","fetchMoviesReviews"],"sourceRoot":""}