{"version":3,"file":"static/js/972.edb5418d.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/ScrollUp/ScrollUpBtn.module.css?dda6","components/ScrollUp/ScrollUpBtn.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieSearch/MovieSearch.module.css?d7a7","webpack://goit-react-hw-05-movies/./src/components/ButtonMore/ButtonMore.module.css?ad63","components/ButtonMore/ButtonMore.jsx","pages/MovieSearch/MovieSearch.jsx","services/fetchApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ScrollUpBtn_btn__gQZOR\"};","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport styles from \"components/ScrollUp/ScrollUpBtn.module.css\"\nexport const ScrollUpBtn = () => {\n    const [scrollUpBtn, setscrollUpBtn] = useState(false);\n    useEffect(() => {\n        window.addEventListener('scroll', () => {\n            if (window.scrollY > 100) {\n                setscrollUpBtn(true)\n            } else {\n                setscrollUpBtn(false)\n            }\n        })\n    }, [])\n    \n    const scrollUp = () => {\n        window.scrollTo({\n            top: 0,\n            behavior:\"smooth\"\n        })\n    }\n    return (\n    <>\n        {scrollUpBtn && (\n                <button className={styles.btn}\n                   \n                onClick={scrollUp}>^</button>     \n        )}\n        </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"conteiner\":\"MovieSearch_conteiner__dTEa4\",\"form\":\"MovieSearch_form__D9lls\",\"input\":\"MovieSearch_input__CJqU8\",\"button\":\"MovieSearch_button__UXtWr\",\"list\":\"MovieSearch_list__STSMH\",\"item\":\"MovieSearch_item__vAVZS\",\"info\":\"MovieSearch_info__zBgQX\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ButtonMore_button__YPyE-\"};","import styles from 'components/ButtonMore/ButtonMore.module.css'\nexport const ButtonMore = ({ onLoadMore }) => {\n  return (\n//  Math.ceil(images.totalHits / images.perPage) <= pageNumber\n        <button onClick={onLoadMore}\n      className={styles.button}\n      \n    >\n      <p>NEXT</p>\n    </button> \n)}","import { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { fetchBySearch } from 'services/fetchApi';\nimport { Link,Outlet,useSearchParams,useLocation } from 'react-router-dom';\nimport { Loader } from \"../../components/Loading/Loader\"\nimport styles from '../MovieSearch/MovieSearch.module.css'\nimport { ButtonMore } from 'components/ButtonMore/ButtonMore';\nimport depositphotos from '../MovieSearch/depositphotos.jpg'\n import noIMG from 'images/noIMG.jpg'\nimport { ScrollUpBtn } from 'components/ScrollUp/ScrollUpBtn';\n\nconst MovieSearch = () => {\n    const [movies, setMovies] = useState([]);\n    const[serchParams, setSearchParams]=useSearchParams()\n    const [page, setPage] = useState(1);\nconst [error, setError] = useState(null);\nconst [loading, setLoading] = useState(false);\nconst [totalResults, setTotalResults] = useState(0);\n// const [totalPages,settotalPages]=useState(20);\n    \n   const location = useLocation()\n const query = serchParams.get('moviename')\n    \n    useEffect(() => {\n        if (!query) {\n             Notify.info('No movies found. Try again!');\n              return\n          }\n       \n       const fetchMoviesSearch = async () => {\n        try {\n            setLoading(true);\n           const response = await fetchBySearch(query, page) \n     const  { results, total_pages, total_results }=response;\n          setMovies(results)\n          setTotalResults(total_results)\n            const totalPages = Math.ceil(total_pages / 20);\n          if (results.length === 0) {\n            Notify.info('No images found. Please submit another query!');\n          return\n          }\n           if (page === totalPages) {\n       Notify.info(\"You've reached the end of search results.\");\n           }\n          if (page >1) {\n           Notify.success(`Hooray! We found ${total_results} images.`);\n          }\n         }  \n            catch(error) {\n                setError('Ooops. Something went wrong...')\n       }     \n           finally {\n        setLoading(false);\n      } \n    }\nfetchMoviesSearch()\n    }, [query,page])\n            \nconst hendleFormSubmit = e => {\n    e.preventDefault();\n \n    const form = e.target\nsetSearchParams({ moviename:form.elements.query.value.trim()})\n\n  //  if (query === null || query === '') {\n  //   return\n  // }\n    form.reset()\n    }\n    const onLoadMore = () => {\n        setPage(prevNumber => prevNumber + 1)\n    }  \n    \n     const loadMovies = movies.length !== 0;\n //console.log('loadImages',loadMovies)\n  const isLastPage = movies.length === totalResults;\n  //console.log('isLastPage',isLastPage)\n  const loadMoreBtn =loadMovies &&  !loading && !isLastPage;\n  //console.log('loadMoreBtn',loadMoreBtn)\n\n    return (\n        <>     \n        <form className={styles.form} onSubmit={hendleFormSubmit}>\n                <input\n                    className={styles.input}\n                    //onChange={hendelChengeInput}\n                    //value={query}\n                    name='query'\n                    type=\"text\" \n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Look for your movie here\"/>\n             <button className={styles.button} type=\"submit\"></button>\n            </form>\n            {error && alert(error.message)}\n        {loading && <Loader />} \n    \n            {loadMovies ? (\n               <> <ul className={styles.list}>\n                  {movies.map(({ id, title, poster_path, release_date, vote_average,original_title }) => {\n                    return (\n                    < li key={id} className={styles.item}>\n                            <p className={styles.reiting}>{vote_average}</p>\n                        <Link to={`/movie/${id}`} state={{ from: location }}>\n                          {poster_path !== null ? <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={original_title} />\n                            : <img src={noIMG} alt={original_title} />}\n                        </Link> \n                        <div className={styles.info}>    \n                             <h1 className={styles.title}>{title}</h1>\n                        <p className={styles.realase}>{release_date}</p>\n                            </div>\n                    </li>    \n                    )    \n                  })}\n                   \n          </ul >\n            <ScrollUpBtn/>\n                   {/* {loadMoreBtn &&<ButtonMore onLoadMore={onLoadMore}/>} */}\n                    <Outlet/>\n</> \n            )\n:  <img\n             style={{\n        display: 'block',\n        margin: \"10px auto\",\n        width: 'auto',\n       height: \"auto\",\n      }}\n            src={depositphotos} alt=\"Let`s watch movies\" />}\n             {loadMoreBtn &&<ButtonMore onLoadMore={onLoadMore}/>}\n        </>\n    )\n}\nexport default MovieSearch;","import axios from \"axios\";\n\nconst KEY = \"a1426f875d9b25aa0fd82fb82639d8ae\"\n\naxios.defaults.baseURL= 'https://api.themoviedb.org/3/'\n//?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport async function fetchByTrending (page) {\n    const response = await axios('trending/movie/week',{\n        params:\n        {\n           api_key: KEY,\n            total_pages: 20,\n            page,\n        }    \n    })\n    return response.data;\n}\n \n\nexport async function fetchBySearch(query,page=1) {\n    const response = await axios('search/movie',{\n        params:\n        {\n           api_key: KEY,\n            total_pages: 20,\n            page:page,\n             query:`${query}`\n        }    \n    })\n    return response.data;\n}\n\nexport async function fetchMoviesById(movie_id) {\n    const response = await axios(`movie/${movie_id}`, {\n        params:\n        {\n          api_key: KEY,\n        }\n    })\n    return response.data;\n}\n\nexport async function fetchMoviesByActors(movie_id) {\n    const response = await axios(`movie/${movie_id}/credits`, {\n        params:\n        {\n            api_key: KEY,   \n           // cast:[]\n        }\n    })\n    return response.data;\n}\n\nexport async function fetchMoviesReviews(movie_id,page,results) {\n    const response = await axios(`movie/${movie_id}/reviews`, {\n        params:\n        {\n            api_key: KEY,   \n            results: [],\n            page:1,\n        }\n    })\n    return response.data.results;\n}\n"],"names":["ScrollUpBtn","useState","scrollUpBtn","setscrollUpBtn","useEffect","window","addEventListener","scrollY","className","styles","onClick","scrollTo","top","behavior","ButtonMore","onLoadMore","movies","setMovies","useSearchParams","serchParams","setSearchParams","page","setPage","error","setError","loading","setLoading","totalResults","setTotalResults","location","useLocation","query","get","fetchMoviesSearch","fetchBySearch","response","results","total_pages","total_results","totalPages","Math","ceil","length","Notify","loadMovies","isLastPage","loadMoreBtn","onSubmit","e","preventDefault","form","target","moviename","elements","value","trim","reset","name","type","autoComplete","autoFocus","placeholder","alert","message","Loader","map","id","title","poster_path","release_date","vote_average","original_title","to","state","from","src","alt","noIMG","style","display","margin","width","height","depositphotos","prevNumber","KEY","fetchByTrending","axios","params","api_key","data","fetchMoviesById","movie_id","fetchMoviesByActors","fetchMoviesReviews"],"sourceRoot":""}