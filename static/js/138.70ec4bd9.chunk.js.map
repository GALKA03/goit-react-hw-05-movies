{"version":3,"file":"static/js/138.70ec4bd9.chunk.js","mappings":"6OA2CA,EAtCqB,WACjB,IAAMA,ECFmB,WACzB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAGEC,GAAUC,EAAAA,EAAAA,MAAVD,SAIF,OAHAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBH,GAAUI,KAAKL,EAClC,GAAE,CAACC,IACGF,CAEV,CDRmBO,GAGVC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAKjB,OAJAC,QAAQC,IAAI,kBAAkBH,GAM1BZ,IACI,iCACI,mBAAQgB,QAAS,WAAO,IAAD,IAAEN,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUK,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IAAM,EAAjE,sBACR,4BACG,gBAAKC,IAAG,yCAAoCnB,EAAQoB,eAAiBC,IAAI,MACrE,4BACC,yBACI,2BACK,uBAAIrB,EAAQsB,kBACb,uBAAItB,EAAQuB,YACZ,uBAAIvB,EAAQwB,UAHPxB,EAAQyB,OAMjB,2BACQ,+BAAK,SAAC,KAAD,CAAMC,GAAE,OAAUT,MAAOL,EAASK,MAAlC,wBACL,yBAAI,SAAC,KAAD,CAAMS,GAAE,UAAaT,MAAOL,EAASK,MAArC,iCAKhB,SAAC,KAAD,MAIf,C,8LExCKU,EAAM,mCAIL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,wFACoBC,EAAAA,EAAAA,GAAM,sBAAsB,CAC/CC,OACA,CACGC,QAASL,EACRM,YAAa,GACbJ,KAAAA,KANL,cACGK,EADH,yBASIA,EAASC,MATb,kEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,wFACoBP,EAAAA,EAAAA,GAAM,eAAe,CACxCC,OACA,CACGC,QAASL,EACRM,YAAa,GACbJ,KAAK,EACJQ,MAAM,GAAD,OAAIA,MAPf,cACGH,EADH,yBAUIA,EAASC,MAVb,kEAaA,SAAe5B,EAAtB,+CAAO,OAAP,oBAAO,WAA+B+B,GAA/B,wFACoBR,EAAAA,EAAAA,GAAM,SAAD,OAAUQ,GAAY,CAC9CP,OACA,CACEC,QAASL,KAJZ,cACGO,EADH,yBAOIA,EAASC,MAPb,kEAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAmCD,GAAnC,wFACoBR,EAAAA,EAAAA,GAAM,SAAD,OAAUQ,EAAV,YAA8B,CACtDP,OACA,CACIC,QAASL,KAJd,cACGO,EADH,yBAQIA,EAASC,MARb,kEAWA,SAAeK,EAAtB,mDAAO,OAAP,oBAAO,WAAkCF,EAAST,EAAKY,GAAhD,wFACoBX,EAAAA,EAAAA,GAAM,SAAD,OAAUQ,EAAV,YAA8B,CACtDP,OACA,CACIC,QAASL,EACTc,QAAS,GACTZ,KAAK,KANV,cACGK,EADH,yBASIA,EAASC,KAAKM,SATlB,kEAjDPX,EAAAA,EAAAA,SAAAA,QAAwB,+B","sources":["pages/MovieSubPage/MovieSubPage.jsx","hooks/UseFetchMovie.jsx","services/fetchApi.jsx"],"sourcesContent":["import { UseFetchMovie } from \"../../hooks/UseFetchMovie\";\nimport { Outlet, Link, useNavigate, useLocation } from \"react-router-dom\";\n// import { useState, useEffect } from \"react\";\n// import styles from '../MovieSearch/MovieSearch.module.css'\n// import{fetchMoviesById} from \"../services/fetchApi\"\nconst MovieSubPage = () => {\n    const movieId = UseFetchMovie();\n   \n    //const results =movieId{}\n    const navigate = useNavigate();\n    //console.log(navigate)\n    const location = useLocation()\n    console.log('locationSubPage',location)\n    // const movieGanres = ({ ganres }) => {\n    //     return \n    // }   \n    return (\n\n        movieId && (\n            <>\n                <button onClick={() => { navigate(location?.state?.from ?? '/') }}>Go back</button>\n        <div>\n           <img src={`https://image.tmdb.org/t/p/w500${movieId.backdrop_path}`} alt=\"\" />     \n               <div>\n                <ul>\n                    <li key={movieId.id}>\n                         <p>{movieId.original_title}</p>\n                        <p>{movieId.overview}</p>\n                        <p>{movieId.title}</p>\n                    </li>\n                    </ul>\n                    <ul>   \n                            <li> <Link to={`cast`} state={location.state}>Actors</Link></li>\n                            <li><Link to={`reviews`} state={location.state}>Reviews</Link></li>\n                    </ul>    \n                </div>\n              \n        </div> \n                <Outlet />\n        </>        \n      )  \n    )\n}\nexport default MovieSubPage;","\nimport { fetchMoviesById} from \"../services/fetchApi\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nexport const UseFetchMovie = () => {\n    const [movies, setMovies] = useState(null);\n\n\nconst{moviesId}=useParams()\n    useEffect(() => {\n        fetchMoviesById(moviesId).then(setMovies)\n    }, [moviesId])\n    return movies;\n   \n}\n","import axios from \"axios\";\n\nconst KEY = \"a1426f875d9b25aa0fd82fb82639d8ae\"\n\naxios.defaults.baseURL= 'https://api.themoviedb.org/3/'\n//?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport async function fetchByTrending (page) {\n    const response = await axios('trending/movie/week',{\n        params:\n        {\n           api_key: KEY,\n            total_pages: 20,\n            page,\n        }    \n    })\n    return response.data;\n}\n \n\nexport async function fetchBySearch(query) {\n    const response = await axios('search/movie',{\n        params:\n        {\n           api_key: KEY,\n            total_pages: 20,\n            page:1,\n             query:`${query}`\n        }    \n    })\n    return response.data;\n}\n\nexport async function fetchMoviesById(movie_id) {\n    const response = await axios(`movie/${movie_id}`, {\n        params:\n        {\n          api_key: KEY,\n        }\n    })\n    return response.data;\n}\n\nexport async function fetchMoviesByActors(movie_id) {\n    const response = await axios(`movie/${movie_id}/credits`, {\n        params:\n        {\n            api_key: KEY,   \n           // cast:[]\n        }\n    })\n    return response.data;\n}\n\nexport async function fetchMoviesReviews(movie_id,page,results) {\n    const response = await axios(`movie/${movie_id}/reviews`, {\n        params:\n        {\n            api_key: KEY,   \n            results: [],\n            page:1,\n        }\n    })\n    return response.data.results;\n}\n"],"names":["movieId","useState","movies","setMovies","moviesId","useParams","useEffect","fetchMoviesById","then","UseFetchMovie","navigate","useNavigate","location","useLocation","console","log","onClick","state","from","src","backdrop_path","alt","original_title","overview","title","id","to","KEY","fetchByTrending","page","axios","params","api_key","total_pages","response","data","fetchBySearch","query","movie_id","fetchMoviesByActors","fetchMoviesReviews","results"],"sourceRoot":""}