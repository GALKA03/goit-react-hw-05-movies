{"version":3,"file":"static/js/8.a18ae853.chunk.js","mappings":"qNAyDA,UAtD0B,WACtB,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAGF,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAsBE,OApBJC,EAAAA,EAAAA,YAAU,WACF,IAAMC,EAAY,mCAAE,8GAGWC,EAAAA,EAAAA,IAAmBT,GAH9B,OAGNU,EAHM,OAIZN,EAAYM,GAJA,gDAQpBJ,EAAS,kCARW,yDAAF,qDAclBE,GACH,GAAC,CAACR,IAKCG,IACI,gCACME,GAASM,MAAMN,EAAMO,UACvB,wBACCT,EAAQU,KAAI,YAA0B,IAAxBC,EAAuB,EAAvBA,GAAGC,EAAoB,EAApBA,OAAOC,EAAa,EAAbA,QACrB,OACI,yBACI,4BACI,wBAAKD,KACL,uBAAIC,QAHHF,EAUnB,OAGd,SAAC,KAAD,MAKC,C,8LCtDKG,EAAM,mCAIL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,wFACoBC,EAAAA,EAAAA,GAAM,sBAAsB,CAC/CC,OACA,CACGC,QAASL,EACRM,YAAa,GACbJ,KAAAA,KANL,cACGT,EADH,yBASIA,EAASc,MATb,kEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,4FAAmCP,EAAnC,+BAAwC,EAAxC,UACoBC,EAAAA,EAAAA,GAAM,eAAe,CACxCC,OACA,CACGC,QAASL,EACRM,YAAa,GACbJ,KAAKA,EACJO,MAAM,GAAD,OAAIA,MAPf,cACGhB,EADH,yBAUIA,EAASc,MAVb,mEAaA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wFACoBR,EAAAA,EAAAA,GAAM,SAAD,OAAUQ,GAAY,CAC9CP,OACA,CACEC,QAASL,KAJZ,cACGP,EADH,yBAOIA,EAASc,MAPb,kEAUA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAmCD,GAAnC,wFACoBR,EAAAA,EAAAA,GAAM,SAAD,OAAUQ,EAAV,YAA8B,CACtDP,OACA,CACIC,QAASL,KAJd,cACGP,EADH,yBAQIA,EAASc,MARb,kEAWA,SAAef,EAAtB,mDAAO,OAAP,oBAAO,WAAkCmB,EAAST,EAAKhB,GAAhD,wFACoBiB,EAAAA,EAAAA,GAAM,SAAD,OAAUQ,EAAV,YAA8B,CACtDP,OACA,CACIC,QAASL,EACTd,QAAS,GACTgB,KAAK,KANV,cACGT,EADH,yBASIA,EAASc,KAAKrB,SATlB,kEAjDPiB,EAAAA,EAAAA,SAAAA,QAAwB,+B","sources":["pages/MovieReviewsPage/MovieReviewsPage.jsx","services/fetchApi.jsx"],"sourcesContent":["import { fetchMoviesReviews } from \"../../services/fetchApi\";\nimport { useState, useEffect } from \"react\";\nimport { Outlet, useParams } from \"react-router-dom\";\n const MovieReviewsPage = () => { \n    const { moviesId } = useParams()\n \n    const [results, setResults] = useState([]);\n    //const[detailse, setDetailse] =useState([])\n    // const[page, setPage] =useState(1)\n  const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\nuseEffect(() => {\n        const fetchResults= async () => {\n            try {\n            //  setLoading(true);\n                const response = await fetchMoviesReviews(moviesId)\n                setResults( response)\n               \n        }\n         catch(error){\n        setError('Ooops. Something went wrong...')\n            } \n    //         finally {\n    //     setLoading(false);\n    //   }\n     }   \n        fetchResults()\n    },[moviesId])\n    \n\n\n    return (\n        results && (\n            <>\n                 {error && alert(error.message)}\n                <ul>\n                {results.map(({id,author,content}) => {\n                    return (\n                        <li key={id}>\n                            <div>\n                                <h1>{author}</h1>\n                                <p>{content}</p>\n                                {/* <p>created:{created_at}</p>\n                                <a href={url}>{url}</a> */}\n                            </div>\n                           \n\n                  </li> \n            )})}   \n               \n            </ul>\n<Outlet/>\n           </>\n        )   \n     \n  )  \n}\nexport default MovieReviewsPage;","import axios from \"axios\";\n\nconst KEY = \"a1426f875d9b25aa0fd82fb82639d8ae\"\n\naxios.defaults.baseURL= 'https://api.themoviedb.org/3/'\n//?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport async function fetchByTrending (page) {\n    const response = await axios('trending/movie/week',{\n        params:\n        {\n           api_key: KEY,\n            total_pages: 20,\n            page,\n        }    \n    })\n    return response.data;\n}\n \n\nexport async function fetchBySearch(query,page=1) {\n    const response = await axios('search/movie',{\n        params:\n        {\n           api_key: KEY,\n            total_pages: 20,\n            page:page,\n             query:`${query}`\n        }    \n    })\n    return response.data;\n}\n\nexport async function fetchMoviesById(movie_id) {\n    const response = await axios(`movie/${movie_id}`, {\n        params:\n        {\n          api_key: KEY,\n        }\n    })\n    return response.data;\n}\n\nexport async function fetchMoviesByActors(movie_id) {\n    const response = await axios(`movie/${movie_id}/credits`, {\n        params:\n        {\n            api_key: KEY,   \n           // cast:[]\n        }\n    })\n    return response.data;\n}\n\nexport async function fetchMoviesReviews(movie_id,page,results) {\n    const response = await axios(`movie/${movie_id}/reviews`, {\n        params:\n        {\n            api_key: KEY,   \n            results: [],\n            page:1,\n        }\n    })\n    return response.data.results;\n}\n"],"names":["moviesId","useParams","useState","results","setResults","error","setError","useEffect","fetchResults","fetchMoviesReviews","response","alert","message","map","id","author","content","KEY","fetchByTrending","page","axios","params","api_key","total_pages","data","fetchBySearch","query","fetchMoviesById","movie_id","fetchMoviesByActors"],"sourceRoot":""}